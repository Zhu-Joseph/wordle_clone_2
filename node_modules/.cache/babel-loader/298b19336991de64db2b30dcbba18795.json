{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst useWordle = solution => {\n  _s();\n\n  const [turn, setTurn] = useState(0);\n  const [currentGuess, setCurrentGuess] = useState('');\n  const [guesses, setGuesses] = useState([]);\n  const [history, setHistory] = useState(['hello']);\n  const [isCorrect, setIsCorrect] = useState(false);\n\n  const formatGuess = () => {};\n\n  const addNewGuess = () => {};\n\n  const handleKeyup = _ref => {\n    let {\n      key\n    } = _ref;\n\n    if (key === 'Enter') {\n      if (turn > 5) {\n        console.log(\"you used all your guesses\");\n        return;\n      }\n\n      if (history.includes(currentGuess)) {\n        console.log('You already tried that word');\n        return;\n      }\n\n      if (currentGuess.length !== 5) {\n        console.log('your word must be 5 characters long');\n        return;\n      }\n    }\n\n    if (key === 'Backspace' || key === 'Delete') {\n      setCurrentGuess(prev => {\n        return prev.slice(0, -1);\n      });\n    }\n\n    if (/^[A-Za-z]$/.test(key)) {\n      if (currentGuess.length < 5) {\n        setCurrentGuess(prev => {\n          return prev + key;\n        });\n      } // console.log(key)\n\n    }\n  };\n\n  return {\n    turn,\n    currentGuess,\n    guesses,\n    history,\n    isCorrect,\n    handleKeyup\n  };\n};\n\n_s(useWordle, \"338suuuBYkoe9zkPzhCkkMCfpYQ=\");\n\nexport default useWordle;","map":{"version":3,"sources":["/Users/joez/Desktop/Personal Projects/wordle_react/src/hook/useWordle.js"],"names":["useState","useWordle","solution","turn","setTurn","currentGuess","setCurrentGuess","guesses","setGuesses","history","setHistory","isCorrect","setIsCorrect","formatGuess","addNewGuess","handleKeyup","key","console","log","includes","length","prev","slice","test"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,SAAS,GAAIC,QAAD,IAAc;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAmBJ,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,CAAC,OAAD,CAAD,CAAtC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMa,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAIA,QAAMC,WAAW,GAAG,QAAa;AAAA,QAAZ;AAAEC,MAAAA;AAAF,KAAY;;AAC/B,QAAGA,GAAG,KAAK,OAAX,EAAoB;AAClB,UAAIb,IAAI,GAAG,CAAX,EAAa;AACXc,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA;AACD;;AAED,UAAIT,OAAO,CAACU,QAAR,CAAiBd,YAAjB,CAAJ,EAAoC;AAClCY,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA;AACD;;AAED,UAAIb,YAAY,CAACe,MAAb,KAAwB,CAA5B,EAA+B;AAC7BH,QAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACA;AACD;AACF;;AAED,QAAIF,GAAG,KAAK,WAAR,IAAuBA,GAAG,KAAK,QAAnC,EAA6C;AAC3CV,MAAAA,eAAe,CAAEe,IAAD,IAAU;AACxB,eAAOA,IAAI,CAACC,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACD,OAFc,CAAf;AAGD;;AAED,QAAI,aAAaC,IAAb,CAAkBP,GAAlB,CAAJ,EAA4B;AAC1B,UAAGX,YAAY,CAACe,MAAb,GAAsB,CAAzB,EAA4B;AAC1Bd,QAAAA,eAAe,CAAEe,IAAD,IAAU;AACxB,iBAAOA,IAAI,GAAGL,GAAd;AACD,SAFc,CAAf;AAGD,OALyB,CAM1B;;AACD;AACF,GAhCD;;AAkCA,SAAO;AAACb,IAAAA,IAAD;AAAOE,IAAAA,YAAP;AAAqBE,IAAAA,OAArB;AAA8BE,IAAAA,OAA9B;AAAuCE,IAAAA,SAAvC;AAAkDI,IAAAA;AAAlD,GAAP;AAED,CAnDD;;GAAMd,S;;AAqDN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\"\n\nconst useWordle = (solution) => {\n  const [turn, setTurn ] = useState(0)\n  const [currentGuess, setCurrentGuess] = useState('')\n  const [guesses, setGuesses] = useState([])\n  const [history, setHistory] = useState(['hello'])\n  const [isCorrect, setIsCorrect] = useState(false)\n\n  const formatGuess = () => {\n\n  }\n\n  const addNewGuess = () => {\n    \n  }\n\n  const handleKeyup = ({ key }) => {\n    if(key === 'Enter') {\n      if (turn > 5){\n        console.log(\"you used all your guesses\")\n        return\n      }\n\n      if (history.includes(currentGuess)) {\n        console.log('You already tried that word')\n        return\n      }\n\n      if (currentGuess.length !== 5) {\n        console.log('your word must be 5 characters long')\n        return\n      }\n    }\n\n    if (key === 'Backspace' || key === 'Delete') {\n      setCurrentGuess((prev) => {\n        return prev.slice(0, -1)\n      })\n    }\n\n    if (/^[A-Za-z]$/.test(key)) {\n      if(currentGuess.length < 5) {\n        setCurrentGuess((prev) => {\n          return prev + key\n        })\n      }\n      // console.log(key)\n    }\n  }\n\n  return {turn, currentGuess, guesses, history, isCorrect, handleKeyup}\n\n}\n\nexport default useWordle"]},"metadata":{},"sourceType":"module"}